# make_pdf.py
import shutil
import subprocess
from pathlib import Path
import sys
import time
from config import local_params as lp

TEX = r"""
\documentclass[11pt]{article}
\usepackage[margin=1in]{geometry}
\usepackage{booktabs}
\usepackage{hyperref}
\usepackage{amsmath}

\title{Hello, \LaTeX!}
\author{Your Name}
\date{\today}

\begin{document}
\maketitle

This PDF was generated by a Python script that wrote a \LaTeX{} file and compiled it.

\section*{Math}
An inline equation $E=mc^2$ and a display equation:
\[
  \int_0^1 x^2\,dx = \frac{1}{3}.
\]

\section*{Table}
\begin{tabular}{lrr}
\toprule
Item & Qty & Price \\
\midrule
Widget & 3 & \$9.99 \\
Gadget & 2 & \$14.50 \\
\bottomrule
\end{tabular}

\section*{Links}
Visit \href{https://www.latex-project.org/}{LaTeX Project}.

\end{document}
"""

def main():
    # Output directory for PDFs
    synth_pdfs_dir = lp.latex_pdf_directory
    synth_pdfs_dir.mkdir(parents=True, exist_ok=True)
    
    # Use Unix timestamp for filename
    timestamp = int(time.time())
    pdf_filename = f"{timestamp}.pdf"
    pdf_path = synth_pdfs_dir / pdf_filename
    
    # Work in a temp directory to avoid clutter
    out_dir = Path.cwd()
    tex_path = out_dir / "output.tex"
    temp_pdf_path = out_dir / "output.pdf"

    tex_path.write_text(TEX, encoding="utf-8")
    print(f"Wrote {tex_path}")

    # Prefer latexmk (handles multiple passes + aux files) else fallback to pdflatex (run twice).
    latexmk = shutil.which("latexmk")
    pdflatex = shutil.which("pdflatex")

    try:
        if latexmk:
            cmd = ["latexmk", "-pdf", "-interaction=nonstopmode", "-halt-on-error", str(tex_path.name)]
            print("Compiling with latexmk...")
            subprocess.run(cmd, check=True, cwd=out_dir)
            # Clean aux files but keep PDF
            subprocess.run(["latexmk", "-c"], check=True, cwd=out_dir)
        elif pdflatex:
            print("latexmk not found. Falling back to pdflatex (two passes)...")
            cmd = ["pdflatex", "-interaction=nonstopmode", "-halt-on-error", str(tex_path.name)]
            subprocess.run(cmd, check=True, cwd=out_dir)
            subprocess.run(cmd, check=True, cwd=out_dir)
        else:
            print("Error: Neither latexmk nor pdflatex was found on PATH.")
            print("Install TeX Live (Linux), MacTeX (macOS), or MiKTeX (Windows) and ensure the binaries are on PATH.")
            sys.exit(1)
    except subprocess.CalledProcessError:
        # Show last few lines if compilation failed
        log = out_dir / "output.log"
        if log.exists():
            print("\nCompilation failed. Last 40 lines of output.log:\n")
            print("\n".join(log.read_text(errors="ignore").splitlines()[-40:]))
        else:
            print("\nCompilation failed. Check console output for errors.")
        sys.exit(1)

    if temp_pdf_path.exists():
        shutil.move(str(temp_pdf_path), str(pdf_path))
        print(f"Success! PDF at: {pdf_path}")
    else:
        print("Compilation finished but output.pdf not foundâ€”check logs.")

    # Clean up LaTeX auxiliary files
    for ext in (".aux", ".log", ".out", ".tex"):
        aux_file = out_dir / f"output{ext}"
        if aux_file.exists():
            aux_file.unlink()

if __name__ == "__main__":
    main()
